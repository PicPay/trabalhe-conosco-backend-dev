spring.data.rest.base-path=/api

spring.data.rest.default-page-size=15

com.picpay.csv.database.url=https://s3.amazonaws.com/careers-picpay/users.csv.gz
com.picpay.csv.database.filename=users.csv.gz
com.picpay.relevancia1=lista_relevancia_1.txt
com.picpay.relevancia2=lista_relevancia_2.txt

# DataSource settings: set here your own configurations for the database
# connection. In this example we have "test" as database name and
# "root" as username and password.
#spring.datasource.url = jdbc:mysql://localhost:3306/test
spring.datasource.url=jdbc:h2:file:~/test;LOG=0;CACHE_SIZE=65536;LOCK_MODE=0;UNDO_LOG=0
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
#spring.datasource.username = root
#spring.datasource.password = password

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

server.port=8086